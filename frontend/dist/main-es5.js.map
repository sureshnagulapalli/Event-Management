{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authenticate/authenticate.component.ts","webpack:///src/app/authenticate/authenticate.component.html","webpack:///src/app/bookings/bookings.component.ts","webpack:///src/app/bookings/bookings.component.html","webpack:///src/app/content/auth-content.ts","webpack:///src/app/events/events.component.ts","webpack:///src/app/events/events.component.html","webpack:///src/app/graphql.module.ts","webpack:///src/app/navigation/navigation.component.ts","webpack:///src/app/navigation/navigation.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","createUser","loginUser","AuthenticateComponent","apollo","route","authContent","user","password","button1","button2","localStorage","clear","query","mutate","mutation","variables","email","subscribe","result","data","error","watchQuery","valueChanges","login","setLoginData","navigate","submit","bookings","cancelBooking","BookingsComponent","allBookings","refetch","bookingId","console","log","AuthContent","authData","userId","token","tokenExpiration","loginInfo","setItem","getEvents","creatEvents","bookEvent","EventsComponent","description","date","events","bookedlist","getItem","tempUsers","i","length","_id","push","event","tempEvents","price","booked","includes","mutationBook","eventId","uri","authMiddleware","operation","forward","setContext","headers","set","createApollo","httpLink","http","create","link","cache","GraphQLModule","provide","useFactory","deps","NavigationComponent","router","setLogoutData","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventsComponent } from './events/events.component';\nimport { BookingsComponent } from './bookings/bookings.component';\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\n\n  const routes: Routes = [\n  { path: '', redirectTo: 'authenticate', pathMatch: 'full'},\n  { path: 'events', component: EventsComponent },\n  { path: 'authenticate', component: AuthenticateComponent },\n  { path: 'bookings', component: BookingsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent{\n  title = 'Angular';\n}\n","<app-navigation></app-navigation>\n\n<div><router-outlet></router-outlet></div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthenticateComponent } from './authenticate/authenticate.component';\nimport { BookingsComponent } from './bookings/bookings.component';\nimport { EventsComponent } from './events/events.component';\nimport { GraphQLModule } from './graphql.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthContent  } from './content/auth-content';\nimport { NavigationComponent } from './navigation/navigation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthenticateComponent,\n    BookingsComponent,\n    EventsComponent,\n    NavigationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    GraphQLModule,\n    HttpClientModule\n  ],\n  providers: [AuthContent],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nimport { Router } from '@angular/router';\nimport { AuthContent  } from '../content/auth-content';\n\nconst createUser = gql`\n    mutation createUser($email: String!, $password: String!) {\n    createUser(userInput: {\n      email: $email,\n      password: $password\n      }) \n      {\n  \t    email\n      }\n    }\n  `;\n\n  const loginUser = gql`\n  query login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      userId\n      token\n      tokenExpiration\n    }\n  }\n  `;\n\n@Component({\n  selector: 'app-authenticate',\n  templateUrl: './authenticate.component.html',\n  styleUrls: ['./authenticate.component.css']\n})\n\nexport class AuthenticateComponent implements OnInit {\n\n  user = '';\n  password = '';\n\n  button1 = \"login\";\n  button2 = \"sign up\";\n\n  query;\n  result;\n  error;\n\n  login: {userId : string, token: string, tokenExpiration: number};\n\n  constructor(private apollo: Apollo, private route: Router, private authContent: AuthContent) { }\n\n  ngOnInit() {\n    localStorage.clear();\n  }\n\n  submit() {\n    // sign up\n    if(this.button1 == \"sign up\") {\n      this.query = this.apollo.mutate({\n        mutation: createUser,\n        variables: {email: this.user, password: this.password}\n      });\n  \n      this.query.subscribe( result =>{\n        this.result = result.data.email;\n        this.error = null;  \n      },\n      (error) => {\n        this.error = error;\n      })\n    }\n    //login\n    else if(this.button1 == \"login\") {\n      this.query = this.apollo.watchQuery({\n        query: loginUser,\n        variables:{email: this.user, password: this.password}\n      });\n\n      this.query.valueChanges.subscribe( result => {\n        this.login = result.data.login;\n        this.authContent.setLoginData(this.login);\n        this.error = null;\n        // navigate once user login\n        this.route.navigate(['/events']);\n      },\n      (error) => {\n        this.error = error;\n      })\n    }\n\n  }\n\n  switch() {\n    if(this.button2 == \"sign up\") {\n      this.button2 = \"login\";\n      this.button1 = \"sign up\";\n    }\n    else {\n      this.button2 = \"sign up\";\n      this.button1 = \"login\";\n    }\n  }\n}\n","<br>\n<div class=\"alert alert-danger container\" role=\"alert\" *ngIf = \"error != null\">\n    {{ error }}\n</div>\n<div class=\"alert alert-success container\" role=\"alert\" *ngIf = \"error == null && result != null\">\n    {{ result }}\n</div>\n<div class=\"container\" style=\"width: 28rem;\">\n    <form>\n        <div class=\"form-group\">\n          <label for=\"InputEmail1\">Email address</label>\n          <input type=\"email\" class=\"form-control\" id=\"InputEmail1\" aria-describedby=\"emailHelp\" \n          [(ngModel)] = \"user\" name=\"InputEmail1\">\n          <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n        </div>\n        <div class=\"form-group\">\n          <label for=\"InputPassword1\">Password</label>\n          <input type=\"password\" class=\"form-control\" id=\"InputPassword1\"\n          [(ngModel)] = \"password\" name=\"InputPassword1\">\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-7\">\n                <button type=\"submit\" class=\"btn btn-primary\" (click)='submit()'>{{ button1 }}</button>\n            </div>\n            <div class=\"col-5\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)='switch()'>switch to {{ button2 }}</button>\n            </div>\n        </div>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\nimport { resultKeyNameFromField } from '@apollo/client/utilities';\n\nconst bookings = gql`\n  query {\n    bookings {\n      _id\n      event{\n        title\n        price\n      }\n      user {\n        _id\n      }\n      updatedAt\n    }\n  }\n`;\n\nconst cancelBooking = gql `\n  mutation cancel($id: ID!) {\n    cancelBooking(bookingId: $id) {\n      _id\n    } \n  }\n`;\n\n@Component({\n  selector: 'app-bookings',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.css'] \n})\nexport class BookingsComponent implements OnInit {\n\n  query;\n  allBookings = [];\n\n  constructor(private apollo: Apollo) { }\n\n  ngOnInit() {\n    this.query = this.apollo.watchQuery({\n      query: bookings\n    });\n\n    this.query.valueChanges.subscribe( result =>{\n      this.allBookings = result.data.bookings;\n    });\n    this.query.refetch();\n  }\n\n  onCancel(bookingId) {\n    this.apollo.mutate({\n      mutation: cancelBooking,\n      variables: {id: bookingId}\n    })\n    .subscribe(result => {\n      console.log(result);\n      this.query.refetch();\n    });\n  }\n\n}\n","<div class=\"container\">\n    <br>\n    <div class=\"row justify-content-center\">\n        <div class=\"col-8\" *ngFor = \"let booking of allBookings\">\n            <div class=\"row\">\n                <div class=\"col-auto\">\n                    <div class=\"card\" style=\"width: 35rem;\">\n                        <div class=\"card-body\">\n                            <div class=\"row\">\n                                <h5 class=\"card-title col-auto\">{{ booking.event.title }}</h5>\n                                <p class=\"card-text col-auto mr-auto\">${{ booking.event.price }}</p>\n                                <p class=\"card-text col-auto\">booked on: &nbsp;<b>{{booking.updatedAt.substr(0,10)}}</b></p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col\">\n                    <button type='button'  style=\"height: 5rem;\"\n                    class=\"btn btn-outline-danger col-auto\" (click)=\"onCancel(booking._id)\">cancel</button>\n                </div>\n            </div>\n            <br>\n        </div>\n    </div>\n</div>\n\n","export class AuthContent {\r\n    private authData = {\r\n        userId: '',\r\n        token: '',\r\n        tokenExpiration: 0\r\n    }\r\n    getData() {\r\n        return this.authData;\r\n    }\r\n    \r\n    setLoginData(loginInfo: {userId: string, token: string, tokenExpiration: number}) {\r\n        this.authData.userId = loginInfo.userId;\r\n        this.authData.token = loginInfo.token;\r\n        this.authData.tokenExpiration = loginInfo.tokenExpiration;\r\n        localStorage.setItem('token', loginInfo.token);\r\n        localStorage.setItem('user', loginInfo.userId);\r\n    }\r\n\r\n    setLogoutData() {\r\n        this.authData.token = '';\r\n        this.authData.userId = '';\r\n        this.authData.tokenExpiration = 0;\r\n\r\n        localStorage.clear();\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\nimport { AuthContent } from '../content/auth-content';\nimport { BookingsComponent } from '../bookings/bookings.component';\n\n\nconst getEvents = gql`\n  query events{\n    events: events {\n      _id\n      title\n      description\n      price\n      date\n    }\n    bookings: bookings {\n      user {\n        _id\n      }\n      event {\n        _id\n      }\n    }\n  }\n`;\n\nconst creatEvents = gql`\n  mutation createEvent($title: String!, $description: String!, $price: Float!, $date: String!){\n    createEvent(eventInput: {title: $title, description: $description, price: $price, date: $date}) {\n      _id\n      title\n      description\n      date\n      price\n    }\n  }\n`;\n\nconst bookEvent = gql`\n  mutation bookEvent($eventId: ID!){\n    bookEvent(eventId: $eventId) {\n      _id\n    }\n  }\n`;\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.css']\n})\nexport class EventsComponent implements OnInit {\n\n  title: string = '';\n  description: string = '';\n  price: number;\n  date: string = '';\n\n  login: boolean = false;\n\n  events = [];\n\n  query;\n  mutation;\n  mutationBook;\n  checkbooking;\n  bookedlist =  [];\n\n  constructor(private authContent: AuthContent, private apollo: Apollo) { }\n\n  ngOnInit() {\n    this.query = this.apollo.watchQuery({\n      query: getEvents, \n    });\n\n    if(localStorage.getItem('token')) { this.login = true; }\n    else { this.login = false; }\n    \n    this.query.valueChanges.subscribe( result => {\n      var tempUsers = result.data.bookings;\n      this.bookedlist = [];\n      for(var i=0; i< tempUsers.length; i++) {\n        if(localStorage.getItem('user') == tempUsers[i].user._id) {\n          this.bookedlist.push(tempUsers[i].event._id);\n        }\n      }\n      this.events = [];\n      var tempEvents = result.data.events;\n      for(var i=0; i<tempEvents.length; i++) {\n        var event = {\n          _id: tempEvents[i]._id,\n          title: tempEvents[i].title,\n          description: tempEvents[i].description,\n          price: tempEvents[i].price,\n          date: tempEvents[i].date,\n          booked: false\n        }\n        if(this.bookedlist.includes(event._id)) {\n          event.booked = true;\n        }\n        this.events.push(event);\n      }\n    });\n  }\n\n  submit() {\n    this.mutation = this.apollo.mutate({\n      mutation: creatEvents,\n      variables: {title: this.title, description: this.description, price: this.price, date: this.date}\n    });\n\n    this.mutation.subscribe( result =>{\n      this.title = null;\n      this.description = null;\n      this.price = null;\n      this.date = null;\n      this.query.refetch();\n    });\n  }\n\n  onBook(id: String) {\n    this.mutationBook = this.apollo.mutate({\n      mutation: bookEvent,\n      variables: {eventId: id}\n    });\n\n    this.mutationBook.subscribe( result => {\n      this.query.refetch();\n    })\n  }\n}\n","<div class=\"container\">\n    <br>\n    <div *ngIf=\"login\">\n    <form>\n        <div class=\"form\">\n            <div class=\"row justify-content-center\">\n                <div class=\"col-auto\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"title\"\n                    [(ngModel)]=\"title\" name=\"title\">\n                </div>\n                <div class=\"col-auto\">\n                    <input type=\"date\" class=\"form-control\" placeholder=\"date\"\n                    [(ngModel)]=\"date\" name=\"date\">\n                </div>\n                <div class=\"col-auto\">\n                    <input type=\"Number\" class=\"form-control\" placeholder=\"price\"\n                    [(ngModel)]=\"price\" name=\"price\">\n                </div>\n                \n            </div>\n            <br>\n            <div class=\"row justify-content-center\">\n                <div class=\"col-6\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"description\"\n                    [(ngModel)]=\"description\" name=\"description\">\n                </div>\n                <div class=\"col-auto\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)='submit()'>enter</button>\n                </div>\n            </div>\n        </div>\n    </form>\n    <hr>\n    </div>\n    <div class=\"row justify-content-center\">\n        <div class=\"col-7\" *ngFor = \"let event of events\">\n            <div class=\"card\" style=\"width: 30rem;\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\">{{ event.title }}</h5>\n                    <p class=\"card-text\">{{ event.description }}</p>\n                    <div class=\"row justify-content-between\">\n                        <div class=\"col-auto\">\n                            <a class=\"card-link text-dark mr-auto\"> ${{ event.price }}</a>\n                        </div>\n                        <div class=\"col-auto\">\n                            <a class=\"card-link text-dark\">{{ event.date.substr(0,10) }}</a>\n                        </div>\n                    </div>\n                </div>\n                <button type='button' class=\"btn btn-outline-success\" routerLink=\"/authenticate\"\n                *ngIf=\"!login\">book</button>\n                <button type='button' class=\"btn btn-outline-success\" (click)=\"onBook(event._id)\" \n                *ngIf=\"login && !event.booked\">book</button>\n                <button type='button' class=\"btn btn-outline-success\" disabled \n                *ngIf=\"login && event.booked\">booked</button>\n            </div>\n            <br>\n        </div>\n    </div>\n</div>\n","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache, ApolloLink, concat} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst uri = 'http://localhost:3000/graphql'; // <-- add the URL of the GraphQL server here\n\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  operation.setContext({\n    headers: new HttpHeaders().set('Authorization', 'Bearer ' + localStorage.getItem('token') || null)\n  });\n  return forward(operation);\n});\n\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  const http = httpLink.create({uri});\n  return {\n    link: concat(authMiddleware, http),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, Event, NavigationStart } from '@angular/router';\nimport { AuthContent } from '../content/auth-content';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  login: boolean =false;\n\n  constructor(private router: Router, private authContent: AuthContent) { \n\n  router.events.subscribe( (event: Event) => {\n    if (event instanceof NavigationStart) {\n      if(localStorage.getItem('token')) {\n        this.login = true;\n      }\n      else {\n        this.login = false;\n      }\n    }\n  })\n}\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token')) {\n      this.login = true;\n    }\n    else {\n      this.login = false;\n    }\n  }\n\n  onLogout() {\n    this.authContent.setLogoutData();\n    this.router.navigate([\"/authenticate\"]);\n  }\n  \n}\n","<nav class=\"navbar navbar-dark bg-dark row\">\n    <div class=\"container\">\n        <div class=\"col mr-auto\">\n            <a class=\"navbar-brand\" routerLink=\"/events\">Events</a>\n        </div>\n        <div class=\"col-auto\">\n            <nav class=\"nav\">\n                <a class=\"nav-link text-light\" routerLink=\"/events\">Events</a>\n                <a class=\"nav-link text-light\" routerLink=\"/bookings\" *ngIf=\"login\">Bookings</a>\n                <a class=\"nav-link text-light\" routerLink=\"/authenticate\" *ngIf=\"!login\">Authenticate</a>\n                <a type=\"button\" class=\"nav-link text-light\" (click)=\"onLogout()\" *ngIf=\"login\">Logout</a>\n            </nav>\n        </div>\n    </div>\n</nav>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}